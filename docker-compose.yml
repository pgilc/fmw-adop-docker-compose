# set TARGET_HOST to dns/ip of proxy
# set LOGSTASH_HOST to dns/ip of logstash host

proxy:
  container_name: proxy
  restart: always
  image: nginx-test
  #build: ../images/docker-nginx/
  net: ${CUSTOM_NETWORK_NAME}
  ports:
    - "80:80"
    - "443:443"
  environment:
    - "constraint:tier==public"
    - "LDAP_SERVER=ldap:389"
    - "LDAP_USERNAME=cn=admin,${LDAP_FULL_DOMAIN}"
    - "LDAP_PASSWORD=${LDAP_PWD}"
    - "LDAP_USER_BASE_DN=ou=people,${LDAP_FULL_DOMAIN}"
    - "LDAP_GROUP_ATTRIBUTE=member"
    - "LDAP_USER_ID_ATTRIBUTE=cn"
    - "LDAP_USER_OBJECT_CLASS=inetOrgPerson"
    - "GIT_REPO=gitlab"

ldap:
  container_name: ldap
  restart: always
  #build: ../images/docker-ldap/
  image: accenture/adop-ldap:0.1.2
  net: ${CUSTOM_NETWORK_NAME}
  expose:
    - "389"
  ports:
    - "389:389"
  environment:
    INITIAL_ADMIN_USER: ${INITIAL_ADMIN_USER}
    INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD}
    JENKINS_PASSWORD: ${JENKINS_PWD}
    GERRIT_PASSWORD: ${GERRIT_PWD}
    SLAPD_PASSWORD: ${LDAP_PWD}
    SLAPD_DOMAIN: ${LDAP_DOMAIN}
    SLAPD_FULL_DOMAIN: ${LDAP_FULL_DOMAIN}

  container_name: sonar
  restart: always
  image: accenture/adop-sonar:0.2.0
  #build: ../images/docker-sonar/
  net: ${CUSTOM_NETWORK_NAME}
  expose:
    - "9000"
  environment:
    - "dependency:container==sonar-mysql"
    - "LDAP_URL=ldap://ldap:389"
    - "LDAP_BIND_DN=cn=admin,${LDAP_FULL_DOMAIN}"
    - "LDAP_BIND_PASSWORD=${LDAP_PWD}"
    - "LDAP_USER_BASE_DN=ou=people,${LDAP_FULL_DOMAIN}"
    - "LDAP_USER_REQUEST=(&(objectClass=inetOrgPerson)(uid={login}))"
    - "LDAP_USER_REAL_NAME_ATTRIBUTE=displayName"
    - "LDAP_USER_EMAIL_ATTRIBUTE=mail"
    - "LDAP_GROUP_BASE_DN=ou=groups,${LDAP_FULL_DOMAIN}"
    - "LDAP_GROUP_REQUEST=(&(objectClass=groupOfUniqueNames)(uniqueMember={dn}))"
    - "LDAP_GROUP_ID_ATTRIBUTE=cn"
    - "SONARQUBE_JDBC_URL=jdbc:mysql://sonar-mysql:3306/${SONAR_MYSQL_DATABASE}?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true"

jenkins:
  container_name: jenkins
  restart: always
  image: accenture/adop-jenkins:0.1.5
  #build: ../images/docker-jenkins/
  net: ${CUSTOM_NETWORK_NAME}
  expose:
    - "8080"
    - "50000"
  privileged: true
  environment:
    ADOP_PLATFORM_MANAGEMENT_VERSION: "0.1.1"
    JENKINS_OPTS: "--prefix=/jenkins"
    ROOT_URL: "${PROTO}://${TARGET_HOST}/jenkins/"
    LDAP_SERVER: "ldap:389"
    LDAP_ROOTDN: "${LDAP_FULL_DOMAIN}"
    LDAP_USER_SEARCH_BASE: "ou=people"
    LDAP_USER_SEARCH: "uid={0}"
    LDAP_GROUP_SEARCH_BASE: "ou=groups"
    LDAP_GROUP_SEARCH_FILTER: ""
    LDAP_GROUP_MEMBERSHIP_FILTER: ""
    LDAP_MANAGER_DN: "cn=admin,${LDAP_FULL_DOMAIN}"
    LDAP_MANAGER_PASSWORD: ${LDAP_PWD}
    LDAP_INHIBIT_INFER_ROOTDN: "false"
    LDAP_DISABLE_MAIL_ADDRESS_RESOLVER: "false"
    LDAP_DISPLAY_NAME_ATTRIBUTE_NAME: "displayName"
    LDAP_MAIL_ADDRESS_ATTRIBUTE_NAME: "mail"
    INITIAL_ADMIN_USER: ${INITIAL_ADMIN_USER}
    INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD_PLAIN}
    SONAR_SERVER_URL: "http://sonar:9000/sonar/"
    SONAR_ACCOUNT_LOGIN: ${SONAR_ACCOUNT_LOGIN}
    SONAR_ACCOUNT_PASSWORD: ${PASSWORD_JENKINS}
    SONAR_DB_URL: "jdbc:mysql://sonar-mysql:3306/sonar?useUnicode=true&amp;characterEncoding=utf8"
    SONAR_DB_LOGIN: ${SONAR_DB_LOGIN}
    SONAR_DB_PASSWORD: ${SONAR_DB_PASSWORD}
    SONAR_PLUGIN_VERSION: ""
    SONAR_ADDITIONAL_PROPS: ""
    SONAR_RUNNER_VERSION: "2.4"
    ANT_VERSION: "1.9.4"
    MAVEN_VERSION: "3.0.5"
    NODEJS_VERSION: "0.12.2"
    NODEJS_GLOBAL_PACKAGES: "grunt-cli@~0.1.13 bower@~1.3.12 plato@~1.2.1"
    NODEJS_PACKAGES_REFRESH_HOURS: "72"
    GIT_GLOBAL_CONFIG_NAME: "ADOP Jenkins"
    GIT_GLOBAL_CONFIG_EMAIL: "jenkins@${LDAP_DOMAIN}"
    DOCKER_TLS_VERIFY: ${DOCKER_TLS_VERIFY}
    DOCKER_HOST: ${DOCKER_HOST}
    DOCKER_CLIENT_CERT_PATH: ${DOCKER_CLIENT_CERT_PATH}
    DOCKER_NETWORK_NAME: ${CUSTOM_NETWORK_NAME}
    SMTP_USER: "${INITIAL_ADMIN_USER}@${LDAP_DOMAIN}"
    SMTP_PASSWORD: "${INITIAL_ADMIN_PASSWORD_PLAIN}"
    SMTP_HOST: "mail-server"
    SMTP_PORT: "25"
    SMTP_SYSAD_EMAIL: "jenkins@adop-core"
    ADOP_SMTP_ENABLED: "true"

jenkins-slave:
  container_name: jenkins-slave
  restart: always
  image: accenture/adop-jenkins-slave:0.1.3
  net: ${CUSTOM_NETWORK_NAME}
  privileged: true
  environment:
    SLAVE_LABELS: "aws ldap java8 docker"
    SWARM_PASSWORD: ${PASSWORD_JENKINS}
    SLAVE_EXECUTORS: ${SLAVE_EXECUTORS}
    INITIAL_ADMIN_USER: ${INITIAL_ADMIN_USER}
    INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD_PLAIN}

  container_name: nexus
  restart: always
  image:  accenture/adop-nexus:0.1.0
  net: ${CUSTOM_NETWORK_NAME}
  expose:
    - "8081"
  environment:
    NEXUS_BASE_URL: "${PROTO}://${TARGET_HOST}/nexus"
    LDAP_SEARCH_BASE: "${LDAP_FULL_DOMAIN}"
    LDAP_ENABLED: "true"
    LDAP_URL: "ldap"
    LDAP_BIND_DN: "cn=admin,${LDAP_FULL_DOMAIN}"
    LDAP_USER_PASSWORD_ATTRIBUTE: "userPassword"
    LDAP_USER_BASE_DN: "ou=people"
    LDAP_GROUP_BASE_DN: "ou=groups"
    LDAP_BIND_PASSWORD: ${LDAP_PWD}

ldap-ltb:
  container_name: ldap-ltb
  restart: always
  image: accenture/adop-ldap-ltb:0.1.0
  net: ${CUSTOM_NETWORK_NAME}
  expose:
    - "80"
  environment:
    LDAP_LTB_URL: "ldap://ldap:389"
    LDAP_LTB_DN: "cn=admin,${LDAP_FULL_DOMAIN}"
    LDAP_LTB_PWD: "${LDAP_PWD}"
    LDAP_LTB_BS: "${LDAP_FULL_DOMAIN}"

ldap-phpadmin:
  container_name: ldap-phpadmin
  restart: always
  image: accenture/adop-ldap-phpadmin:0.1.0
  net: ${CUSTOM_NETWORK_NAME}
  expose:
    - "80"
  environment:
    LDAP_SERVER_NAME: "LDAP"
    LDAP_SERVER_HOST: "ldap"
    LDAP_SERVER_PORT: "389"
    LDAP_SERVER_BIND_ID: "cn=admin,${LDAP_FULL_DOMAIN}"
    LDAP_SERVER_BASE_DN: "${LDAP_FULL_DOMAIN}"
